namespace SpriteKind {
    export const fish = SpriteKind.create()
    export const Bottle = SpriteKind.create()
    export const treser = SpriteKind.create()
    export const compass = SpriteKind.create()
    export const sheep = SpriteKind.create()
    export const muky = SpriteKind.create()
    export const tree = SpriteKind.create()
    export const flower = SpriteKind.create()
}
namespace myTiles {
    //% blockIdentity=images._tile
    export const tile0 = img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`
    //% blockIdentity=images._tile
    export const tile1 = img`
6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 
6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 
6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 
6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 
6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 
6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 
6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 
6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 
6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 
6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 
6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 
6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 
6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 
6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 
6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 
6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 
`
    //% blockIdentity=images._tile
    export const tile2 = img`
8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 
8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 
8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 
8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 
8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 
8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 
8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 
8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 
8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 
8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 
8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 
8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 
8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 
8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 
8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 
8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 
`
    //% blockIdentity=images._tile
    export const tile3 = img`
d d d d d d d d d d d d d d d d 
d d d d d d d d d d d d e d d d 
d d e d d d d d d d d d d d d d 
d d d d d e d d d d e d d d d d 
d d d d d d d d d d d d d d e d 
d e d d d d d d d d d d d d d d 
d d d d d d d d d d d d d d d d 
d d d d d d d d e d d d d d d d 
d d d d d d d d d d d d e d d d 
d d d e d d d d d d d d d d d d 
d d d d d d e d d d d d d d d d 
d d d d d d d d d d d d d d d d 
d d d d d d d d d d d d d d e d 
d d d e d d d d e d d d d d d d 
d d d d d d d d d d d d d d d d 
d d d d d d d d d d d d d d d d 
`
    //% blockIdentity=images._tile
    export const tile4 = img`
7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
7 7 7 7 7 7 7 7 7 7 7 7 5 7 7 7 
7 7 7 7 7 7 7 5 7 7 7 7 5 7 7 7 
7 7 5 7 7 7 7 5 7 7 7 7 6 7 7 7 
7 7 5 7 7 7 7 6 7 7 7 7 7 7 7 7 
7 7 6 7 7 7 7 7 7 7 7 7 7 7 7 7 
7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
7 7 7 7 7 5 7 7 7 7 5 7 7 7 7 7 
7 7 7 7 7 5 7 7 7 7 5 7 7 7 7 7 
7 7 7 7 7 6 7 7 7 7 6 7 7 7 7 7 
7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
`
    //% blockIdentity=images._tile
    export const tile5 = img`
7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
7 7 7 7 7 7 7 7 7 7 7 7 5 7 7 7 
7 7 7 7 7 7 7 5 7 7 7 7 5 7 7 7 
7 5 7 7 7 7 7 5 7 7 7 7 6 7 7 7 
7 5 7 7 7 7 7 6 7 7 7 7 7 7 7 7 
7 6 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
7 7 7 7 7 5 7 7 7 7 5 7 7 7 7 7 
7 7 7 7 7 5 7 7 7 7 5 7 7 7 7 7 
7 7 7 7 7 6 7 7 7 7 6 7 7 7 7 7 
7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
`
    //% blockIdentity=images._tile
    export const tile6 = img`
7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
7 7 7 7 7 7 7 7 7 7 7 7 5 7 7 7 
7 7 7 7 7 7 7 5 7 7 7 7 5 7 7 7 
7 5 7 7 7 7 7 5 7 7 7 7 6 7 7 7 
7 5 7 7 7 7 7 6 7 7 7 7 7 7 7 7 
7 6 7 7 7 4 4 4 4 4 7 7 7 7 7 7 
7 7 7 7 7 4 4 4 4 4 7 7 7 7 7 7 
7 7 7 7 7 4 4 4 4 4 7 7 7 7 7 7 
7 7 7 7 7 4 4 4 4 4 7 7 7 7 7 7 
7 7 7 7 7 4 4 4 4 4 5 7 7 7 7 7 
7 7 7 7 7 5 7 7 7 7 5 7 7 7 7 7 
7 7 7 7 7 6 7 7 7 7 6 7 7 7 7 7 
7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
`
}
/**
 */
function doSomething3 () {
    blockSettings.clear()
    game.reset()
}
function load_game () {
    theplayer.setPosition(blockSettings.readNumber("player x"), blockSettings.readNumber("player y"))
    found_bottle = blockSettings.readNumber("biottle")
    if (found_bottle) {
        doSomething2()
        the_treser.setPosition(blockSettings.readNumber("treser x"), blockSettings.readNumber("treser y"))
    }
}
sprites.onOverlap(SpriteKind.Player, SpriteKind.Bottle, function (sprite, otherSprite) {
    found_bottle = 1
    otherSprite.destroy()
    doSomething2()
})
scene.onOverlapTile(SpriteKind.fish, myTiles.tile3, function (sprite, location) {
    sprite.destroy()
})
controller.B.onEvent(ControllerButtonEvent.Pressed, function () {
    doSomething3()
})
function spon_mocy () {
    the_mocy = sprites.create(img`
. . . . f f f f f . . . . . . . 
. . . f e e e e e f . . . . . . 
. . f d d d d e e e f . . . . . 
. c d f d d f d e e f f . . . . 
. c d f d d f d e e d d f . . . 
c d e e d d d d e e b d c . . . 
c d d d d c d d e e b d c . f f 
c c c c c d d d e e f c . f e f 
. f d d d d d e e f f . . f e f 
. . f f f f f e e e e f . f e f 
. . . . f e e e e e e e f f e f 
. . . f e f f e f e e e e f f . 
. . . f e f f e f e e e e f . . 
. . . f d b f d b f f e f . . . 
. . . f d d c d d b b d f . . . 
. . . . f f f f f f f f f . . . 
`, SpriteKind.muky)
    tiles.placeOnTile(the_mocy, tiles.getTileLocation(8, 39))
    animation.runImageAnimation(
    the_mocy,
    [img`
. . . . f f f f f . . . . . . . 
. . . f e e e e e f . . . . . . 
. . f d d d d e e e f . . . . . 
. c d f d d f d e e f . . . . . 
. c d f d d f d e e f f . . . . 
c d e e d d d d e e d d f . . . 
c d d d d c d d e e b d c . . . 
c c c c c d d e e e b d c . f f 
. f d d d d e e e f f c . f e f 
. f f f f f f e e e e f . f e f 
. f f f f e e e e e e e f f e f 
f d d f d d f e f e e e e f f . 
f d b f d b f e f e e e e f . . 
f f f f f f f f f f f f e f . . 
. . . . . . . . . f c d d f . . 
. . . . . . . . . . f f f f . . 
`,img`
. . . . f f f f f . . . . . . . 
. . . f e e e e e f . . . . . . 
. . f d d d d e e e f f . . . . 
. c d d d d d d e e d d f . . . 
. c d f d d f d e e b d c . . . 
c d d f d d f d e e b d c . f f 
c d e e d d d d e e f c . f e f 
c d d d d c d e e e f . . f e f 
. f c c c d e e e f f . . f e f 
. . f f f f f e e e e f . f e f 
. . . . f e e e e e e e f f f . 
. . f f e f e e f e e e e f . . 
. f e f f e e f f f e e e f . . 
f d d b d d c f f f f f f b f . 
f d d c d d d f . . f c d d f . 
. f f f f f f f . . . f f f . . 
`,img`
. . . . f f f f f . . . . . . . 
. . . f e e e e e f f f . . . . 
. . f d d d e e e e d d f . . . 
. c d d d d d e e e b d c . . . 
. c d d d d d d e e b d c . . . 
c d d f d d f d e e f c . f f . 
c d d f d d f d e e f . . f e f 
c d e e d d d d e e f . . f e f 
. f d d d c d e e f f . . f e f 
. . f f f d e e e e e f . f e f 
. . . . f e e e e e e e f f f . 
. . . . f f e e e e e b f f . . 
. . . f e f f e e c d d f f . . 
. . f d d b d d c f f f . . . . 
. . f d d c d d d f f . . . . . 
. . . f f f f f f f . . . . . . 
`,img`
. . . . f f f f f . . . . . . . 
. . . f e e e e e f . . . . . . 
. . f d d d d e e e f . . . . . 
. c d f d d f d e e f f . . . . 
. c d f d d f d e e d d f . . . 
c d e e d d d d e e b d c . . . 
c d d d d c d d e e b d c . f f 
c c c c c d d d e e f c . f e f 
. f d d d d d e e f f . . f e f 
. . f f f f f e e e e f . f e f 
. . . . f e e e e e e e f f e f 
. . . f e f f e f e e e e f f . 
. . . f e f f e f e e e e f . . 
. . . f d b f d b f f e f . . . 
. . . f d d c d d b b d f . . . 
. . . . f f f f f f f f f . . . 
`],
    350,
    true
    )
    x = -1
    for (let value of tiles.getTilesByType(myTiles.tile5)) {
        if (Math.percentChance(50)) {
            flower = sprites.create(img`
. . . . . . . . 
. . . . . . . . 
. . . . . . . . 
. . . . . . . . 
. b b d d b b . 
b 1 1 3 3 1 1 b 
b 1 3 5 5 3 1 b 
b d 3 5 5 3 d b 
c 1 1 d d 1 1 c 
c d 1 d d 1 d c 
. c c 7 6 c c . 
. . 6 7 6 . . . 
. . 6 6 8 8 8 6 
. . 6 8 7 7 7 6 
. . 8 7 7 7 6 . 
. . 8 8 8 6 . . 
`, SpriteKind.flower)
        } else {
            flower = sprites.create(img`
. . . . . . . . 
. . . . . . . . 
. . . . . . . . 
. . c c c . . . 
. c c 6 6 c . . 
c c 3 3 f 6 c . 
c 6 c f 6 3 c . 
c 3 6 3 3 3 c . 
c 3 6 6 3 3 c . 
c 3 3 6 6 3 c . 
. c 3 3 3 6 . . 
. . 6 7 6 . . . 
. . 6 6 8 8 8 6 
. . 6 8 7 7 7 6 
. . 8 7 7 7 6 . 
. . 8 8 8 6 . . 
`, SpriteKind.flower)
        }
        tiles.placeOnTile(flower, value)
    }
    for (let value of tiles.getTilesByType(myTiles.tile6)) {
        flower = sprites.create(img`
. . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . 6 6 . . . . . . . . . . . 
. . . . . . . . . . 6 7 7 6 . . . . . . . . . . 
. . . . . . . . . . 6 7 7 6 . . . . . . . . . . 
. . . . . . . . . 8 7 7 7 7 8 . . . . . . . . . 
. . . . . . . . 8 6 7 7 7 7 6 8 . . . . . . . . 
. . . . . . . 6 7 7 7 7 7 7 7 7 6 . . . . . . . 
. . . . . . 6 7 7 6 7 7 7 7 6 7 7 6 . . . . . . 
. . . . . . 8 6 6 7 7 7 7 7 7 6 6 8 . . . . . . 
. . . . . 8 6 6 7 7 6 7 7 6 7 7 6 6 8 . . . . . 
. . . . 8 6 6 8 8 6 6 7 6 6 8 8 8 6 6 8 . . . . 
. . . . 8 8 8 8 6 6 8 8 8 6 6 8 6 8 8 8 . . . . 
. . . . . 8 6 8 6 8 8 6 8 8 6 8 6 6 8 . . . . . 
. . . . 8 6 6 8 8 8 6 6 8 8 8 8 8 6 8 . . . . . 
. . . . 8 6 8 8 8 8 6 8 8 8 8 8 8 8 8 8 . . . . 
. . . . 8 8 8 6 6 8 8 8 8 8 8 6 6 8 8 8 . . . . 
. . . . 8 6 7 6 8 8 8 8 6 8 8 8 6 7 6 8 . . . . 
. . . 8 7 7 7 8 8 6 8 6 7 8 6 8 8 7 7 6 . . . . 
. . 8 7 7 7 7 6 7 7 6 7 7 8 7 7 6 7 7 7 8 . . . 
. 8 7 7 7 6 7 7 7 7 7 7 7 6 7 7 7 7 6 7 7 8 . . 
. 8 8 6 6 7 7 7 7 7 7 7 7 7 7 7 7 7 7 6 7 7 8 . 
. 8 6 6 7 7 7 6 7 7 6 7 6 7 7 7 6 7 7 7 6 8 8 . 
. . 8 8 7 7 6 6 7 6 8 6 6 8 7 7 6 6 6 7 6 6 8 . 
. . 8 6 8 8 6 6 8 8 8 6 6 8 8 6 8 6 6 8 8 6 6 8 
. 8 6 6 8 8 6 8 8 6 8 6 8 6 6 8 8 8 6 8 8 8 8 8 
8 6 6 8 8 6 8 8 6 6 8 8 8 8 6 6 8 8 8 8 6 8 . . 
8 8 8 8 6 6 8 6 6 8 8 8 8 8 8 6 8 6 8 8 6 6 8 . 
. 8 6 8 8 8 8 8 8 8 8 8 8 8 8 8 8 6 6 8 8 6 8 . 
. 8 8 7 8 8 8 8 8 6 8 8 6 8 8 7 8 8 6 8 7 8 8 . 
. 8 7 7 6 8 7 7 6 7 8 8 7 7 8 7 7 7 6 6 7 7 8 8 
8 7 7 6 7 7 7 6 7 7 8 7 7 7 6 7 6 7 7 7 6 7 7 8 
8 8 8 7 7 7 8 7 7 6 6 7 7 7 7 7 7 8 7 7 7 8 8 . 
. . 8 8 8 8 6 7 8 6 7 7 7 6 6 7 7 6 8 8 8 8 . . 
. . . . . 8 6 8 8 7 7 8 6 6 6 8 8 6 8 . . . . . 
. . . . . . 8 8 8 6 8 8 8 6 6 8 8 8 8 . . . . . 
. . . . . . . . . 8 8 e e 8 8 . . . . . . . . . 
. . . . . . . . . f e e e e f . . . . . . . . . 
. . . . . . . . . f e e e e f . . . . . . . . . 
. . . . . . . . f e e e f e e f . . . . . . . . 
. . . . . . . . f e f e f f e f . . . . . . . . 
`, SpriteKind.tree)
        tiles.placeOnTile(flower, value)
    }
}
sprites.onOverlap(SpriteKind.Player, SpriteKind.Food, function (sprite, otherSprite) {
	
})
function doSomething () {
    theplayer.setImage(img`
. f f f f f f f . . . . . . . . 
. f f f f f f f 1 1 1 . . . . . 
. . . . 1 1 1 1 1 1 1 1 . . . . 
. . . . 1 1 1 e 1 1 1 1 . . . . 
. . . . 1 1 1 e 1 1 1 1 1 . . . 
. . . . 1 1 1 1 1 1 1 1 1 . . . 
. . . . 1 1 1 1 1 1 1 1 1 . . . 
. . . . . . . e . . . . . . . . 
e e e e . . e e . . . . . . . . 
9 9 e e e e e e e e e e e e e . 
9 9 e 9 9 e 9 9 e e 9 9 e e e . 
b b b 9 9 b 9 9 b b 9 9 b b b . 
. e e e e e e e e e e e e e . . 
. b b b b b b b b b b b b b . . 
. . e e e e e e e e e e e . . . 
. . . . 1 1 1 1 1 1 1 . . . . . 
`)
    if (theplayer.tileKindAt(TileDirection.Center, myTiles.tile1) || theplayer.tileKindAt(TileDirection.Center, myTiles.tile2)) {
        pause(200)
        if (theplayer.tileKindAt(TileDirection.Center, myTiles.tile1) || theplayer.tileKindAt(TileDirection.Center, myTiles.tile2)) {
            pause(200)
            if (theplayer.tileKindAt(TileDirection.Center, myTiles.tile1) || theplayer.tileKindAt(TileDirection.Center, myTiles.tile2)) {
                pause(100)
                theplayer.setImage(img`
. . . . f f f f . . . . . . . . 
. f f f f f f f 1 1 1 . . . . . 
. f f f 1 1 1 1 1 1 1 1 . . . . 
. . . . 1 1 1 e 1 1 1 1 . . . . 
. . . . 1 1 1 e 1 1 1 1 1 . . . 
. . . . 1 1 1 1 1 1 1 1 1 . . . 
. . . . 1 1 1 1 1 1 1 1 1 . . . 
. . . . . . . e . . . . . . . . 
e e e e . . e e . . . . . . . . 
9 9 e e e e e e e e e e e e e . 
9 9 e 9 9 e 9 9 e e 9 9 e e e . 
b b b 9 9 b 9 9 b b 9 9 b b b . 
. e e e e e e e e e e e e e . . 
. b b b b b b b b b b b b b . . 
. . e e e e e e e e e e e . . . 
. . . . 1 1 1 1 1 1 1 . . . . . 
`)
                if (theplayer.tileKindAt(TileDirection.Center, myTiles.tile1) || theplayer.tileKindAt(TileDirection.Center, myTiles.tile2)) {
                    pause(200)
                    if (theplayer.tileKindAt(TileDirection.Center, myTiles.tile1) || theplayer.tileKindAt(TileDirection.Center, myTiles.tile2)) {
                        pause(200)
                        if (theplayer.tileKindAt(TileDirection.Center, myTiles.tile1) || theplayer.tileKindAt(TileDirection.Center, myTiles.tile2)) {
                            pause(100)
                        }
                    }
                }
            }
        }
    }
}
function save_dada () {
    blockSettings.writeNumber("fish x", fish.x)
    blockSettings.writeNumber("fish y", fish.y)
    blockSettings.writeNumber("player x", theplayer.x)
    blockSettings.writeNumber("player y", theplayer.y)
    if (found_bottle) {
        blockSettings.writeNumber("biottle", 1)
        blockSettings.writeNumber("treser x", the_treser.x)
        blockSettings.writeNumber("treser y", the_treser.y)
    } else {
        blockSettings.writeNumber("biottle", 0)
    }
}
sprites.onOverlap(SpriteKind.Player, SpriteKind.treser, function (sprite, otherSprite) {
	
})
function doSomething2 () {
    the_treser = sprites.create(img`
2 2 2 . . . . . . . . . . 2 2 2 
2 2 2 2 . . . . . . . . 2 2 2 2 
2 2 2 2 2 . . . . . . 2 2 2 2 2 
. 2 2 2 2 2 . . . . 2 2 2 2 2 . 
. . 2 2 2 2 2 . . 2 2 2 2 2 . . 
. . . 2 2 2 2 2 2 2 2 2 2 . . . 
. . . . 2 2 2 2 2 2 2 2 . . . . 
. . . . . 2 2 2 2 2 2 . . . . . 
. . . . . 2 2 2 2 2 2 . . . . . 
. . . . 2 2 2 2 2 2 2 2 . . . . 
. . . 2 2 2 2 2 2 2 2 2 2 . . . 
. . 2 2 2 2 2 . . 2 2 2 2 2 . . 
. 2 2 2 2 2 . . . . 2 2 2 2 2 . 
2 2 2 2 2 . . . . . . 2 2 2 2 2 
2 2 2 2 . . . . . . . . 2 2 2 2 
2 2 2 . . . . . . . . . . 2 2 2 
`, SpriteKind.treser)
    tiles.placeOnRandomTile(the_treser, myTiles.tile3)
    theCompass.setImage(comes_in[0])
}
function meshig_in_botle () {
    if (!(found_bottle)) {
        botle = sprites.create(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . 4 4 . . . . . . . . 
. . . . . 1 1 1 1 . . . . . . . 
. . . . 1 1 d d 1 1 . . . . . . 
. . . . 1 9 d d 9 1 . . . . . . 
. . . . 1 9 d d 9 1 . . . . . . 
. . . . 1 9 d d 9 1 . . . . . . 
. . . . 1 1 1 1 1 1 . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, SpriteKind.Bottle)
        tiles.placeOnRandomTile(botle, myTiles.tile1)
        while (Math.abs(theplayer.x - botle.x) > 200 || Math.abs(theplayer.y - botle.y) > 200) {
            tiles.placeOnRandomTile(botle, myTiles.tile1)
        }
    }
}
function doSomething4 () {
    fish = sprites.create(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . 8 8 . 8 . . . . . . . 
. . . . 8 8 8 8 . . . . . . . . 
. . . . . 8 8 . 8 . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, SpriteKind.fish)
    tiles.placeOnRandomTile(fish, myTiles.tile1)
    fish.setVelocity(-50, 0)
    fish.setFlag(SpriteFlag.DestroyOnWall, true)
    animation.runImageAnimation(
    fish,
    [img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . 8 . . . . . . . 
. . . . . 8 8 8 . . . . . . . . 
. . . . 8 8 8 . 8 . . . . . . . 
. . . . . 8 8 . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`,img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . 8 8 . 8 . . . . . . . 
. . . . 8 8 8 8 . . . . . . . . 
. . . . . 8 8 . 8 . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`,img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . 8 . . . . . . . 
. . . . . 8 8 8 . . . . . . . . 
. . . . 8 8 8 . 8 . . . . . . . 
. . . . . 8 8 . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`,img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . 8 8 . 8 . . . . . . . 
. . . . 8 8 8 8 . . . . . . . . 
. . . . . 8 8 . 8 . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`],
    200,
    true
    )
}
let if_on_land = false
let botle: Sprite = null
let fish: Sprite = null
let flower: Sprite = null
let x = 0
let the_mocy: Sprite = null
let the_treser: Sprite = null
let found_bottle = 0
let theCompass: Sprite = null
let comes_in: Image[] = []
let theplayer: Sprite = null
color.setPalette(
color.originalPalette
)
tiles.setTilemap(tiles.createTilemap(
            hex`ccc0dc04040403030101010101010101010101010103030302020202020202030303030301010101010101010101010303030c040404030303010101010101030303040404040303030101010101010101010101010303030302020202020202030303030101010101010101010103030304040404040303030101010101010303030404040403030301010101010101010101010103030303020202020202020203030301010101010101010101030303040404040403030301010101010103030304040404030303010101010101010101010101030303030202020202020203030303010101010101010101010303040404040c03030303010101010101010303030303030303010101010101010101010101010103030303030202020202030303030101010101010101010303030404040403030303030101010101010101030303030303010101010101010101010101010101010303030303030303030303030101010101010101010103030304040cc04040404040404040303030301010101010101010101010101030303030404040403030303010101010101010101010101010101010101010303030304040404040404040404040403030303030101010101010101010101010303030404040c040403030301010101010101010101010101010101010303030303040404040d040404040404040403030303030301010101010101010101010303030404040404040404030101010101010101010101010101010103030303030404040c0c0404040c0c0d04040403030303030301010101010101010101010303030404040404040404040301010101010101010101010101010103030304040404040c040c04040c0c04040404040303030303010101010101010101010103030304040404040404040403010101010101010101010101010101030304040404040d0c0c0c04040c040c04040404040303030301010101010101010101010303030404040404040c0404030101010101010101010101010101010304040404040404040404040c0c0c0c0c0404040403030303010101010101010101010101030303030304040404040303010101010101010101010101010101040404040c0c0c0c0c0c0c0d0c0c0c0c040c0c0d0c0303030301010101010101010101010101010303030303030303030301010101010101010101010101010104040d040c040c040c0c0c04040c0c0c040c0c040c03030303010101010101010101010101010101010303030303030301010101010101010101010101010101040404040c0c0c040404040c0c0c0c0c0404040404030303030101010101010101010101010101010101010101010101010101010101010101010101010101010404040404040404040404040c0c0404040404040403030301010101010101010101010101010101010101010101010101010101010101010101010101010101`,
            img`
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . 2 . . . . . . . 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
`,
            [myTiles.tile0,myTiles.tile1,myTiles.tile2,myTiles.tile3,myTiles.tile4,sprites.builtin.oceanSand4,sprites.builtin.coral1,sprites.builtin.coral0,sprites.builtin.coral4,sprites.builtin.coral5,sprites.castle.tileGrass1,sprites.castle.tileGrass3,myTiles.tile5,myTiles.tile6],
            TileScale.Sixteen
        ))
theplayer = sprites.create(img`
. . . . f f f f . . . . . . . . 
. f f f f f f f 1 1 1 . . . . . 
. f f f 1 1 1 1 1 1 1 1 . . . . 
. . . . 1 1 1 e 1 1 1 1 . . . . 
. . . . 1 1 1 e 1 1 1 1 1 . . . 
. . . . 1 1 1 1 1 1 1 1 1 . . . 
. . . . 1 1 1 1 1 1 1 1 1 . . . 
. . . . . . . e . . . . . . . . 
e e e e . . e e . . . . . . . . 
9 9 e e e e e e e e e e e e e . 
9 9 e 9 9 e 9 9 e e 9 9 e e e . 
b b b 9 9 b 9 9 b b 9 9 b b b . 
. e e e e e e e e e e e e e . . 
. b b b b b b b b b b b b b . . 
. . e e e e e e e e e e e . . . 
. . . . 1 1 1 1 1 1 1 . . . . . 
`, SpriteKind.Player)
comes_in = [img`
. . . . e e e e e e e . . . . . 
. . e e 1 1 1 1 1 1 1 e e . . . 
. e 1 1 1 1 1 f 1 1 1 1 1 e . . 
. e 1 8 1 1 1 f 1 1 1 8 1 e . . 
e 1 1 1 8 1 1 f 1 1 8 1 1 1 e . 
e 1 1 1 1 1 1 f 1 1 1 1 1 1 e . 
e 1 1 1 1 1 1 f 1 1 1 1 1 1 e . 
e 1 8 8 1 1 1 f 1 1 1 8 8 1 e . 
e 1 1 1 1 1 1 1 1 1 1 1 1 1 e . 
e 1 1 1 1 1 1 1 1 1 1 1 1 1 e . 
e 1 1 1 8 1 1 1 1 1 8 1 1 1 e . 
. e 1 8 1 1 1 8 1 1 1 8 1 e . . 
. e 1 1 1 1 1 8 1 1 1 1 1 e . . 
. . e e 1 1 1 1 1 1 1 e e . . . 
. . . . e e e e e e e . . . . . 
. . . . . . . . . . . . . . . . 
`, img`
. . . . e e e e e e e . . . . . 
. . e e 1 1 1 1 1 1 1 e e . . . 
. e 1 1 1 1 1 2 1 1 1 1 1 e . . 
. e 1 8 1 1 1 2 1 1 1 f 1 e . . 
e 1 1 1 8 1 1 1 1 1 f 1 1 1 e . 
e 1 1 1 1 1 1 1 1 f 1 1 1 1 e . 
e 1 1 1 1 1 1 1 f 1 1 1 1 1 e . 
e 1 8 8 1 1 1 f 1 1 1 8 8 1 e . 
e 1 1 1 1 1 1 1 1 1 1 1 1 1 e . 
e 1 1 1 1 1 1 1 1 1 1 1 1 1 e . 
e 1 1 1 8 1 1 1 1 1 8 1 1 1 e . 
. e 1 8 1 1 1 8 1 1 1 8 1 e . . 
. e 1 1 1 1 1 8 1 1 1 1 1 e . . 
. . e e 1 1 1 1 1 1 1 e e . . . 
. . . . e e e e e e e . . . . . 
. . . . . . . . . . . . . . . . 
`, img`
. . . . e e e e e e e . . . . . 
. . e e 1 1 1 1 1 1 1 e e . . . 
. e 1 1 1 1 1 2 1 1 1 1 1 e . . 
. e 1 8 1 1 1 2 1 1 1 8 1 e . . 
e 1 1 1 8 1 1 1 1 1 8 1 1 1 e . 
e 1 1 1 1 1 1 1 1 1 1 1 1 1 e . 
e 1 1 1 1 1 1 1 1 1 1 1 1 1 e . 
e 1 8 8 1 1 1 f f f f f f 1 e . 
e 1 1 1 1 1 1 1 1 1 1 1 1 1 e . 
e 1 1 1 1 1 1 1 1 1 1 1 1 1 e . 
e 1 1 1 8 1 1 1 1 1 8 1 1 1 e . 
. e 1 8 1 1 1 8 1 1 1 8 1 e . . 
. e 1 1 1 1 1 8 1 1 1 1 1 e . . 
. . e e 1 1 1 1 1 1 1 e e . . . 
. . . . e e e e e e e . . . . . 
. . . . . . . . . . . . . . . . 
`, img`
. . . . e e e e e e e . . . . . 
. . e e 1 1 1 1 1 1 1 e e . . . 
. e 1 1 1 1 1 2 1 1 1 1 1 e . . 
. e 1 8 1 1 1 2 1 1 1 8 1 e . . 
e 1 1 1 8 1 1 1 1 1 8 1 1 1 e . 
e 1 1 1 1 1 1 1 1 1 1 1 1 1 e . 
e 1 1 1 1 1 1 1 1 1 1 1 1 1 e . 
e 1 8 8 1 1 1 f 1 1 1 8 8 1 e . 
e 1 1 1 1 1 1 1 f 1 1 1 1 1 e . 
e 1 1 1 1 1 1 1 1 f 1 1 1 1 e . 
e 1 1 1 8 1 1 1 1 1 f 1 1 1 e . 
. e 1 8 1 1 1 8 1 1 1 f 1 e . . 
. e 1 1 1 1 1 8 1 1 1 1 1 e . . 
. . e e 1 1 1 1 1 1 1 e e . . . 
. . . . e e e e e e e . . . . . 
. . . . . . . . . . . . . . . . 
`, img`
. . . . e e e e e e e . . . . . 
. . e e 1 1 1 1 1 1 1 e e . . . 
. e 1 1 1 1 1 2 1 1 1 1 1 e . . 
. e 1 8 1 1 1 2 1 1 1 8 1 e . . 
e 1 1 1 8 1 1 1 1 1 8 1 1 1 e . 
e 1 1 1 1 1 1 1 1 1 1 1 1 1 e . 
e 1 1 1 1 1 1 1 1 1 1 1 1 1 e . 
e 1 8 8 1 1 1 f 1 1 1 8 8 1 e . 
e 1 1 1 1 1 1 f 1 1 1 1 1 1 e . 
e 1 1 1 1 1 1 f 1 1 1 1 1 1 e . 
e 1 1 1 8 1 1 f 1 1 8 1 1 1 e . 
. e 1 8 1 1 1 f 1 1 1 8 1 e . . 
. e 1 1 1 1 1 f 1 1 1 1 1 e . . 
. . e e 1 1 1 1 1 1 1 e e . . . 
. . . . e e e e e e e . . . . . 
. . . . . . . . . . . . . . . . 
`, img`
. . . . e e e e e e e . . . . . 
. . e e 1 1 1 1 1 1 1 e e . . . 
. e 1 1 1 1 1 2 1 1 1 1 1 e . . 
. e 1 8 1 1 1 2 1 1 1 8 1 e . . 
e 1 1 1 8 1 1 1 1 1 8 1 1 1 e . 
e 1 1 1 1 1 1 1 1 1 1 1 1 1 e . 
e 1 1 1 1 1 1 1 1 1 1 1 1 1 e . 
e 1 8 8 1 1 1 f 1 1 1 8 8 1 e . 
e 1 1 1 1 1 f 1 1 1 1 1 1 1 e . 
e 1 1 1 1 f 1 1 1 1 1 1 1 1 e . 
e 1 1 1 f 1 1 1 1 1 8 1 1 1 e . 
. e 1 f 1 1 1 8 1 1 1 8 1 e . . 
. e 1 1 1 1 1 8 1 1 1 1 1 e . . 
. . e e 1 1 1 1 1 1 1 e e . . . 
. . . . e e e e e e e . . . . . 
. . . . . . . . . . . . . . . . 
`, img`
. . . . e e e e e e e . . . . . 
. . e e 1 1 1 1 1 1 1 e e . . . 
. e 1 1 1 1 1 2 1 1 1 1 1 e . . 
. e 1 8 1 1 1 2 1 1 1 8 1 e . . 
e 1 1 1 8 1 1 1 1 1 8 1 1 1 e . 
e 1 1 1 1 1 1 1 1 1 1 1 1 1 e . 
e 1 1 1 1 1 1 1 1 1 1 1 1 1 e . 
e 1 f f f f f f 1 1 1 8 8 1 e . 
e 1 1 1 1 1 1 1 1 1 1 1 1 1 e . 
e 1 1 1 1 1 1 1 1 1 1 1 1 1 e . 
e 1 1 1 8 1 1 1 1 1 8 1 1 1 e . 
. e 1 8 1 1 1 8 1 1 1 8 1 e . . 
. e 1 1 1 1 1 8 1 1 1 1 1 e . . 
. . e e 1 1 1 1 1 1 1 e e . . . 
. . . . e e e e e e e . . . . . 
. . . . . . . . . . . . . . . . 
`, img`
. . . . e e e e e e e . . . . . 
. . e e 1 1 1 1 1 1 1 e e . . . 
. e 1 1 1 1 1 2 1 1 1 1 1 e . . 
. e 1 f 1 1 1 2 1 1 1 8 1 e . . 
e 1 1 1 f 1 1 1 1 1 8 1 1 1 e . 
e 1 1 1 1 f 1 1 1 1 1 1 1 1 e . 
e 1 1 1 1 1 f 1 1 1 1 1 1 1 e . 
e 1 8 8 1 1 1 f 1 1 1 8 8 1 e . 
e 1 1 1 1 1 1 1 1 1 1 1 1 1 e . 
e 1 1 1 1 1 1 1 1 1 1 1 1 1 e . 
e 1 1 1 8 1 1 1 1 1 8 1 1 1 e . 
. e 1 8 1 1 1 8 1 1 1 8 1 e . . 
. e 1 1 1 1 1 8 1 1 1 1 1 e . . 
. . e e 1 1 1 1 1 1 1 e e . . . 
. . . . e e e e e e e . . . . . 
. . . . . . . . . . . . . . . . 
`]
theCompass = sprites.create(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, SpriteKind.compass)
theCompass.setFlag(SpriteFlag.RelativeToCamera, true)
theCompass.setPosition(150, 110)
found_bottle = 0
load_game()
controller.moveSprite(theplayer)
scene.cameraFollowSprite(theplayer)
doSomething4()
save_dada()
meshig_in_botle()
spon_mocy()
game.onUpdateInterval(100, function () {
    the_mocy.x += x
})
game.onUpdateInterval(200, function () {
    if (Math.percentChance(20)) {
        fish = sprites.create(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . 8 8 . 8 . . . . . . . 
. . . . 8 8 8 8 . . . . . . . . 
. . . . . 8 8 . 8 . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, SpriteKind.fish)
        if (Math.percentChance(70)) {
            tiles.placeOnRandomTile(fish, myTiles.tile1)
        } else {
            fish.setPosition(blockSettings.readNumber("fish x"), blockSettings.readNumber("fish y"))
        }
        fish.setVelocity(Math.randomRange(-30, -50), 0)
        fish.setFlag(SpriteFlag.DestroyOnWall, true)
        animation.runImageAnimation(
        fish,
        [img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . 8 . . . . . . . 
. . . . . 8 8 8 . . . . . . . . 
. . . . 8 8 8 . 8 . . . . . . . 
. . . . . 8 8 . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`,img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . 8 8 . 8 . . . . . . . 
. . . . 8 8 8 8 . . . . . . . . 
. . . . . 8 8 . 8 . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`,img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . 8 . . . . . . . 
. . . . . 8 8 8 . . . . . . . . 
. . . . 8 8 8 . 8 . . . . . . . 
. . . . . 8 8 . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`,img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . 8 8 . 8 . . . . . . . 
. . . . 8 8 8 8 . . . . . . . . 
. . . . . 8 8 . 8 . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`],
        200,
        true
        )
    } else {
        if (Math.percentChance(20)) {
            fish = sprites.create(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . 3 3 . 3 . . . . . . . 
. . . . 3 3 3 3 . . . . . . . . 
. . . . . 3 3 . 3 . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, SpriteKind.fish)
            if (Math.percentChance(70)) {
                tiles.placeOnRandomTile(fish, myTiles.tile1)
            } else {
                fish.setPosition(blockSettings.readNumber("fish x"), blockSettings.readNumber("fish y"))
            }
            fish.setVelocity(Math.randomRange(-30, -50), 0)
            fish.setFlag(SpriteFlag.DestroyOnWall, true)
            animation.runImageAnimation(
            fish,
            [img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . 3 . . . . . . . 
. . . . . 3 3 3 . . . . . . . . 
. . . . 3 3 3 . 3 . . . . . . . 
. . . . . 3 3 . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`,img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . 3 3 . 3 . . . . . . . 
. . . . 3 3 3 3 . . . . . . . . 
. . . . . 3 3 . 3 . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`,img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . 3 . . . . . . . 
. . . . . 3 3 3 . . . . . . . . 
. . . . 3 3 3 . 3 . . . . . . . 
. . . . . 3 3 . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`,img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . 3 3 . 3 . . . . . . . 
. . . . 3 3 3 3 . . . . . . . . 
. . . . . 3 3 . 3 . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`],
            200,
            true
            )
        } else {
            if (Math.percentChance(20)) {
                fish = sprites.create(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . 5 5 . 5 . . . . . . . 
. . . . 5 5 5 5 . . . . . . . . 
. . . . . 5 5 . 5 . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, SpriteKind.fish)
                if (Math.percentChance(70)) {
                    tiles.placeOnRandomTile(fish, myTiles.tile1)
                } else {
                    fish.setPosition(blockSettings.readNumber("fish x"), blockSettings.readNumber("fish y"))
                }
                fish.setVelocity(Math.randomRange(-30, -50), 0)
                fish.setFlag(SpriteFlag.DestroyOnWall, true)
                animation.runImageAnimation(
                fish,
                [img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . 5 . . . . . . . 
. . . . . 5 5 5 . . . . . . . . 
. . . . 5 5 5 . 5 . . . . . . . 
. . . . . 5 5 . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`,img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . 5 5 . 5 . . . . . . . 
. . . . 5 5 5 5 . . . . . . . . 
. . . . . 5 5 . 5 . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`,img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . 5 . . . . . . . 
. . . . . 5 5 5 . . . . . . . . 
. . . . 5 5 5 . 5 . . . . . . . 
. . . . . 5 5 . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`,img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . 5 5 . 5 . . . . . . . 
. . . . 5 5 5 5 . . . . . . . . 
. . . . . 5 5 . 5 . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`],
                200,
                true
                )
            } else {
                if (Math.percentChance(20)) {
                    fish = sprites.create(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . 2 2 . 2 . . . . . . . 
. . . . 2 2 2 2 . . . . . . . . 
. . . . . 2 2 . 2 . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, SpriteKind.fish)
                    if (Math.percentChance(70)) {
                        tiles.placeOnRandomTile(fish, myTiles.tile1)
                    } else {
                        fish.setPosition(blockSettings.readNumber("fish x"), blockSettings.readNumber("fish y"))
                    }
                    fish.setVelocity(Math.randomRange(-30, -50), 0)
                    fish.setFlag(SpriteFlag.DestroyOnWall, true)
                    animation.runImageAnimation(
                    fish,
                    [img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . 2 . . . . . . . 
. . . . . 2 2 2 . . . . . . . . 
. . . . 2 2 2 . 2 . . . . . . . 
. . . . . 2 2 . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`,img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . 2 2 . 2 . . . . . . . 
. . . . 2 2 2 2 . . . . . . . . 
. . . . . 2 2 . 2 . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`,img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . 2 . . . . . . . 
. . . . . 2 2 2 . . . . . . . . 
. . . . 2 2 2 . 2 . . . . . . . 
. . . . . 2 2 . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`,img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . 2 2 . 2 . . . . . . . 
. . . . 2 2 2 2 . . . . . . . . 
. . . . . 2 2 . 2 . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`],
                    200,
                    true
                    )
                } else {
                    fish = sprites.create(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . 1 4 . 4 . . . . . . . 
. . . . 4 1 4 1 . . . . . . . . 
. . . . . 1 4 . 4 . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, SpriteKind.fish)
                    if (Math.percentChance(70)) {
                        tiles.placeOnRandomTile(fish, myTiles.tile1)
                    } else {
                        fish.setPosition(blockSettings.readNumber("fish x"), blockSettings.readNumber("fish y"))
                    }
                    fish.setVelocity(Math.randomRange(-30, -50), 0)
                    fish.setFlag(SpriteFlag.DestroyOnWall, true)
                    animation.runImageAnimation(
                    fish,
                    [img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . 4 . . . . . . . 
. . . . . 1 4 1 . . . . . . . . 
. . . . 4 1 4 . 4 . . . . . . . 
. . . . . 1 4 . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`,img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . 1 4 . 4 . . . . . . . 
. . . . 4 1 4 1 . . . . . . . . 
. . . . . 1 4 . 4 . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`,img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . 4 . . . . . . . 
. . . . . 1 4 1 . . . . . . . . 
. . . . 4 1 4 . 4 . . . . . . . 
. . . . . 1 4 . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`,img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . 1 4 . 4 . . . . . . . 
. . . . 4 1 4 1 . . . . . . . . 
. . . . . 1 4 . 4 . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`],
                    200,
                    true
                    )
                }
            }
        }
    }
})
game.onUpdate(function () {
    if (theplayer.tileKindAt(TileDirection.Center, myTiles.tile1) || theplayer.tileKindAt(TileDirection.Center, myTiles.tile2)) {
        if_on_land = false
    } else {
        if_on_land = true
    }
})
forever(function () {
    if (theplayer.tileKindAt(TileDirection.Center, myTiles.tile1) || theplayer.tileKindAt(TileDirection.Center, myTiles.tile2)) {
        doSomething()
    } else {
        theplayer.setImage(img`
. . . . . . f f f f f . . . . . 
. . . . . f f 1 1 1 f f . . . . 
. . . . . f 1 f 1 f 1 f . . . . 
. . . . . f 1 1 1 1 1 f . . . . 
. . 5 5 . f f 1 f 1 f f . 5 5 . 
. . f 5 5 f f f f f f f 5 5 f . 
. . f f f f f f f f f f f f f . 
. . . . . b b 1 b 1 b b . . . . 
. . . . . b b b b b b b . . . . 
. . . . . . b b b b b . . . . . 
. . . . 2 2 2 2 2 2 2 2 2 . . . 
. . . 4 . 4 4 4 4 4 4 4 . 4 . . 
. . . 2 . 2 2 2 2 2 2 2 . 2 . . 
. . . 5 . 4 4 4 4 4 4 4 . b . . 
. . . . . 8 8 8 8 8 8 8 . . . . 
. . . . . . 8 . . . e . . . . . 
`)
    }
})
forever(function () {
    if (the_mocy.tileKindAt(TileDirection.Left, myTiles.tile3)) {
        x = 1
    } else {
        if (the_mocy.tileKindAt(TileDirection.Right, myTiles.tile3)) {
            x = -1
        }
    }
})
forever(function () {
    if (found_bottle) {
        color.startFade(color.originalPalette, color.Black, 5000)
        pause(5000)
        color.startFade(color.Black, color.Poke, 5000)
        pause(10000)
        color.startFade(color.Poke, color.White, 5000)
        pause(5000)
        color.startFade(color.White, color.originalPalette, 5000)
        pause(10000)
    }
})
game.onUpdateInterval(1000, function () {
    save_dada()
})
